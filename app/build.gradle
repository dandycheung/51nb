buildscript {
    ext {
        // supportLibraryVersion = '28.0.0'
    }

    repositories {
        mavenCentral()
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion as int
    buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.targetSdkVersion as int

        jackOptions {
            // enabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, "51nb-release-v${variant.versionName}.apk")
                }
            }
        }
        debug {
            ext.enableCrashlytics = false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    dexOptions {
        jumboMode true
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:preference-v7:$supportLibraryVersion"
    compile "com.android.support:preference-v14:$supportLibraryVersion"

    compile 'org.jsoup:jsoup:1.13.1'
    compile('com.squareup.okhttp3:okhttp:3.12.12')

    compile 'com.google.code.gson:gson:2.8.5'

    compile 'com.github.bumptech.glide:glide:3.8.0' // Do NOT update glide

    compile 'com.birbit:android-priority-jobqueue:1.3.5'
    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'

    compile('com.mikepenz:fastadapter:3.2.1@aar') {
        transitive = true
        exclude group: 'com.android.support'
    }
    compile 'com.mikepenz:fastadapter-commons:3.2.1@aar'
    compile 'com.mikepenz:fastadapter-extensions:3.2.1@aar'

    compile 'com.mikepenz:fontawesome-typeface:4.6.0.2@aar'
    compile 'com.mikepenz:google-material-typeface:2.2.0.2.original@aar'
    compile 'com.mikepenz:iconics-views:3.0.4@aar'

    compile('com.mikepenz:materialdrawer:6.0.3@aar') {
        transitive = true
        exclude group: 'com.android.support'
    }

    compile('com.thebluealliance:spectrum:0.7.1') {
        exclude group: 'org.greenrobot'
        exclude group: 'com.android.support'
    }

    compile 'com.daasuu:BubbleLayout:1.1.1'
    compile('com.vdurmont:emoji-java:3.1.3') {
        exclude group: 'org.json', module: 'json'
    }

    compile('com.zhihu.android:matisse:0.5.0-alpha4') {
        exclude group: 'com.android.support'
    }

    compile 'com.evernote:android-job:1.1.11'

    compile('com.afollestad.material-dialogs:core:0.9.4.7') {
        exclude group: 'com.android.support'
    }

    // compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(name: 'calligraphy-release-2.3.0', ext: 'aar')
    compile(name: 'filepicker-release-1.1.1', ext: 'aar')
    compile project(':emoji')

    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true
    }
    compile 'androidx.exifinterface:exifinterface:1.1.0'

    compile(name: 'aidi-release-1.0.0', ext: 'aar')
    // debugCompile('com.squareup.leakcanary:leakcanary-android:2.4')
}
